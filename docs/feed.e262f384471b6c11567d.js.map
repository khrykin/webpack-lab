{"version":3,"sources":["webpack:///./src/loadHuge.ts","webpack:///./src/with-huge.tsx","webpack:///./src/feed.tsx"],"names":["hugePromise","WithHuge","from","hugeSize","setHugeSize","Promise","resolve","reject","console","log","time","window","addEventListener","then","lib","timeEnd","length","catch","once","loadHuge","style","backgroundColor","className","render","onClick","document","getElementById"],"mappings":"8HAAIA,E,gBCGW,SAASC,EAAS,G,IAAEC,EAAI,OAC/B,EAA0B,mBAAS,GAAlCC,EAAQ,KAAEC,EAAW,KAM5B,OAJA,qBAAU,YDJG,SAAkBF,GAC/B,OAAIF,IAIJA,EAAc,IAAIK,SAAQ,SAACC,EAASC,GAClCC,QAAQC,IAAI,sBAAsBP,EAAI,OACtCM,QAAQE,KAAK,qBAAqBR,EAAI,OACtCS,OAAOC,iBAAiB,QAAQ,WAC9B,6BAGGC,MAAK,SAAC,G,IAAWC,EAAG,UACnBN,QAAQO,QAAQ,qBAAqBb,EAAI,OACzCM,QAAQC,IAAI,oBAAoBP,EAAI,OAAQY,EAAIE,QAChDV,EAAQQ,EAAIE,WAEbC,MAAMV,KACR,CAAEW,MAAM,SCbXC,CAASjB,GAAMW,KAAKT,KACnB,IAGD,0BAAMgB,MAAO,CAAEC,gBAAiB,kBAC9B,+BAAQ,6LAYLlB,EAEG,8B,sBAA0BA,GAD1B,0BAAMmB,UAAU,SAAO,yB,+BCzBnC,kDAIAd,QAAQC,IAAI,aAEZ,IAASc,OAAO,mBAEhB,WACE,OACE,yBAAKH,MAAO,CAAEC,gBAAiB,c,QACxB,kBAAC,IAAQ,CAACnB,KAAK,SACpB,4BAAQsB,QAAS,WAAQhB,QAAQC,IAAI,aAAa,gCANnC,MAAKgB,SAASC,eAAe,W","file":"feed.e262f384471b6c11567d.js","sourcesContent":["let hugePromise: Promise<number> | undefined;\n\nexport default function loadHuge(from: string): Promise<number> {\n  if (hugePromise) {\n    return hugePromise;\n  }\n\n  hugePromise = new Promise((resolve, reject) => {\n    console.log(`loading heavy from ${from}...`);\n    console.time(`loaded heavy from ${from} in`);\n    window.addEventListener(\"load\", () => {\n      import(\n        /* webpackChunkName: \"huge\" */\n        \"./huge\")\n        .then(({ default: lib }) => {\n          console.timeEnd(`loaded heavy from ${from} in`);\n          console.log(`huge loaded from ${from} in:`, lib.length);\n          resolve(lib.length);\n        })\n        .catch(reject);\n    }, { once: true });\n  });\n\n  return hugePromise;\n}","import React, { useEffect, useState } from \"react\";\nimport loadHuge from \"./loadHuge\";\n\nexport default function WithHuge({ from }: { from: string; }) {\n  const [hugeSize, setHugeSize] = useState(0);\n\n  useEffect(() => {\n    loadHuge(from).then(setHugeSize);\n  }, []);\n\n  return (\n    <span style={{ backgroundColor: \"paleturquoise\" }}>\n      <style>{`\n        .blink {\n          animation: blinker 1s linear infinite;\n        }\n\n        @keyframes blinker {\n          50% {\n            opacity: 0;\n          }\n        }\n      `}</style>\n      {\n        !hugeSize\n          ? <span className=\"blink\">Huge is loading...</span>\n          : <span>Huge loaded. Size: {hugeSize}</span>\n      }\n    </span>);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WithHuge from './with-huge';\n\nconsole.log(\"init feed\");\n\nReactDOM.render(<Feed />, document.getElementById(\"feed\"));\n\nfunction Feed() {\n  return (\n    <div style={{ backgroundColor: \"palegreen\" }}>\n      FEED <WithHuge from=\"feed\" />\n      <button onClick={() => { console.log(\"clicked\"); }}>Click me and see console!</button>\n    </div>\n  );\n}"],"sourceRoot":""}