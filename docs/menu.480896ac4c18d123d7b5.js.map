{"version":3,"sources":["webpack:///./src/loadHuge.ts","webpack:///./src/with-huge.tsx","webpack:///./src/small.jsx","webpack:///./src/menu.tsx","webpack:///./src/some-package/index.ts"],"names":["hugePromise","WithHuge","from","hugeSize","setHugeSize","window","addEventListener","Promise","resolve","reject","console","log","time","then","lib","timeEnd","length","catch","loadHuge","once","style","backgroundColor","className","Small","render","document","getElementById","onload"],"mappings":"8HAAIA,E,gBCGW,SAASC,EAAS,G,IAAEC,EAAI,OAC/B,EAA0B,mBAAS,GAAlCC,EAAQ,KAAEC,EAAW,KAU5B,OARA,qBAAU,WACRC,OAAOC,iBACL,QACA,WAAM,ODPG,SAAkBJ,GAC/B,OAAIF,IAIJA,EAAc,IAAIO,SAAQ,SAACC,EAASC,GAClCC,QAAQC,IAAI,sBAAsBT,EAAI,OACtCQ,QAAQE,KAAK,qBAAqBV,EAAI,OACtC,6BAIGW,MAAK,SAAC,G,IAAWC,EAAG,UACnBJ,QAAQK,QAAQ,qBAAqBb,EAAI,OACzCQ,QAAQC,IAAI,oBAAoBT,EAAI,OAAQY,EAAIE,QAChDR,EAAQM,EAAIE,WAEbC,MAAMR,OCVDS,CAAShB,GAAMW,KAAKT,KAC1B,CAAEe,MAAM,MAET,IAGD,0BAAMC,MAAO,CAAEC,gBAAiB,kBAC9B,+BAAQ,6LAYLlB,EAEG,8B,sBAA0BA,GAD1B,0BAAMmB,UAAU,SAAO,yB,kFC5BpBC,EADD,kBAAM,sBAAMH,MAAO,CAAEC,gBAAiB,QAAhC,oB,OCMpBX,QAAQC,IAAI,aCLVD,QAAQC,IAAI,qCDSd,IAASa,OAAO,mBAIhB,WACE,OACE,yBAAKJ,MAAO,CAAEC,gBAAiB,W,qBACV,2BACnB,kBAAC,EAAK,MACN,kBAAC,IAAQ,CAACnB,KAAK,YATA,MAAKuB,SAASC,eAAe,SAElDrB,OAAOsB,OAAS,WAAM,OAAAjB,QAAQC,IAAI,a","file":"menu.480896ac4c18d123d7b5.js","sourcesContent":["let hugePromise: Promise<number> | undefined;\n\nexport default function loadHuge(from: string): Promise<number> {\n  if (hugePromise) {\n    return hugePromise;\n  }\n\n  hugePromise = new Promise((resolve, reject) => {\n    console.log(`loading heavy from ${from}...`);\n    console.time(`loaded heavy from ${from} in`);\n    import(\n      /* webpackPrefetch: true */\n      /* webpackChunkName: \"huge\" */\n      \"./huge\")\n      .then(({ default: lib }) => {\n        console.timeEnd(`loaded heavy from ${from} in`);\n        console.log(`huge loaded from ${from} in:`, lib.length);\n        resolve(lib.length);\n      })\n      .catch(reject);\n  });\n\n  return hugePromise;\n}","import React, { useEffect, useState } from \"react\";\nimport loadHuge from \"./loadHuge\";\n\nexport default function WithHuge({ from }: { from: string; }) {\n  const [hugeSize, setHugeSize] = useState(0);\n\n  useEffect(() => {\n    window.addEventListener(\n      \"load\",\n      () => loadHuge(from).then(setHugeSize),\n      { once: true }\n    );\n  }, []);\n\n  return (\n    <span style={{ backgroundColor: \"paleturquoise\" }}>\n      <style>{`\n        .blink {\n          animation: blinker 1s linear infinite;\n        }\n\n        @keyframes blinker {\n          50% {\n            opacity: 0;\n          }\n        }\n      `}</style>\n      {\n        !hugeSize\n          ? <span className=\"blink\">Huge is loading...</span>\n          : <span>Huge loaded. Size: {hugeSize}</span>\n      }\n    </span>);\n}\n","const Small = () => <span style={{ backgroundColor: \"pink\" }}>small</span>;\nexport default Small;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Small from \"./small\";\nimport WithHuge from \"./with-huge\";\nimport somePackage from \"./some-package\";\n\nconsole.log(\"init menu\");\n\nsomePackage();\n\nReactDOM.render(<Menu />, document.getElementById(\"menu\"));\n\nwindow.onload = () => console.log(\"onload\");\n\nfunction Menu() {\n  return (\n    <div style={{ backgroundColor: \"yellow\" }}>\n      MENU Build Time - {process.env.BUILD_TIME}\n      <Small />\n      <WithHuge from=\"menu\" />\n    </div>\n  );\n}\n","export default function somePackage() {\n  console.log(\"some package loaded from index.ts\");\n}"],"sourceRoot":""}